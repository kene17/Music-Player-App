{"ast":null,"code":"var _jsxFileName = \"/Users/kene17/Desktop/01-starting-project 6/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = props => {\n  _s();\n\n  //Ref\n  const audioRef = useRef(null); //this is how you grab elements in React\n  //event Handlers\n\n  const playSongHandler = () => {\n    // `current` points to the mounted text input element\n    if (props.isPlaying == true) {\n      audioRef.current.pause();\n      props.setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      props.setIsPlaying(true);\n    }\n  };\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration: duration\n    });\n  };\n\n  const getTime = time => {\n    return;\n  }; //State \n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: props.currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"MUo3wg3FJ5cxn0aCd1l/9jZpKvo=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/kene17/Desktop/01-starting-project 6/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","props","audioRef","playSongHandler","isPlaying","current","pause","setIsPlaying","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","currentSong","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,YAHF,QAIO,mCAJP;;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB;AACA,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB,CAFwB,CAEM;AAC9B;;AACA,QAAMS,eAAe,GAAG,MAAK;AAC3B;AACA,QAAGF,KAAK,CAACG,SAAN,IAAiB,IAApB,EAAyB;AACvBF,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACAL,MAAAA,KAAK,CAACM,YAAN,CAAmB,KAAnB;AACD,KAHD,MAGK;AACHL,MAAAA,QAAQ,CAACG,OAAT,CAAiBG,IAAjB;AACAP,MAAAA,KAAK,CAACM,YAAN,CAAmB,IAAnB;AACD;AACF,GATD;;AAUA,QAAME,iBAAiB,GAAIC,CAAD,IAAM;AAC9B,UAAML,OAAO,GAAGK,CAAC,CAACC,MAAF,CAASC,WAAzB;AACA,UAAMC,QAAQ,GAAGH,CAAC,CAACC,MAAF,CAASE,QAA1B;AACAC,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAcH,MAAAA,WAAW,EAAEP,OAA3B;AAAoCQ,MAAAA,QAAQ,EAAEA;AAA9C,KAAD,CAAX;AAED,GALD;;AAMA,QAAMG,OAAO,GAAIC,IAAD,IAAS;AACvB;AAED,GAHD,CApBwB,CAwBxB;;;AACA,QAAM,CAACF,QAAD,EAAWD,WAAX,IAA0BnB,QAAQ,CAAC;AACvCiB,IAAAA,WAAW,EAAE,IAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,kBAAIE,QAAQ,CAACH;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEd;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAIK,eAA5B;AAA6C,QAAA,SAAS,EAAC,MAAvD;AAA8D,QAAA,IAAI,EAAC,IAAnE;AAAwE,QAAA,IAAI,EAAEN;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAA0C,QAAA,IAAI,EAAC,IAA/C;AAAoD,QAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAO,MAAA,YAAY,EAAEU,iBAArB;AAAwC,MAAA,GAAG,EAAEP,QAA7C;AAAuD,MAAA,GAAG,EAAED,KAAK,CAACiB,WAAN,CAAkBC;AAA9E;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;GAAMnB,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = (props) => {\n  //Ref\n  const audioRef = useRef(null);//this is how you grab elements in React\n  //event Handlers\n  const playSongHandler = () =>{\n    // `current` points to the mounted text input element\n    if(props.isPlaying==true){\n      audioRef.current.pause();\n      props.setIsPlaying(false);\n    }else{\n      audioRef.current.play();\n      props.setIsPlaying(true);\n    }\n  };\n  const timeUpdateHandler = (e) =>{\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration: duration});\n\n  };\n  const getTime = (time) =>{\n    return\n\n  }\n  //State \n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null,\n  })\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{songInfo.currentTime}</p>\n        <input type=\"range\" />\n        <p>End Time</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n        <FontAwesomeIcon onClick = {playSongHandler} className=\"play\" size=\"2x\" icon={faPlay} />\n\n        <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n      </div>\n      <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={props.currentSong.audio}></audio>\n    </div>\n  );\n};\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}