{"ast":null,"code":"var _jsxFileName = \"/Users/kene17/Desktop/01-starting-project 6/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react'; //import styles\n\nimport './styles/app.scss'; //Adding components\n\nimport Player from './components/Player';\nimport Song from './components/Song'; //import util\n\nimport data from \"./util\";\nimport Library from './components/Library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Ref\n  const audioRef = useRef(null); //this is how you grab elements in React\n  //State \n\n  const [songs, setSongs] = useState(data()); //sets the array of data to songs\n\n  const [currentSong, setCurrentSong] = useState(songs[0]); //grabs the first song of the array of objects\n\n  const [isPlaying, setIsPlaying] = useState(false); //if a song is playing\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration: duration\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      currentSong: currentSong,\n      setIsPlaying: setIsPlaying,\n      isPlaying: isPlaying,\n      audioRef: audioRef,\n      setSongInfo: setSongInfo,\n      songInfo: songInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      onLoadedMetadata: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Kc/7Yj03h0ab5z2tYr3oYZa8UNQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kene17/Desktop/01-starting-project 6/src/App.js"],"names":["React","useState","useRef","Player","Song","data","Library","App","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","current","target","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB,CAFa,CAEiB;AAC9B;;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAkBT,QAAQ,CAACI,IAAI,EAAL,CAAhC,CAJa,CAI4B;;AACzC,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA9C,CALa,CAK4C;;AACzD,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CANa,CAMsC;;AACnD,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAM;AAC9B,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASL,WAAzB;AACA,UAAMC,QAAQ,GAAGE,CAAC,CAACE,MAAF,CAASJ,QAA1B;AACAF,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,MAAAA,WAAW,EAAEI,OAA3B;AAAoCH,MAAAA,QAAQ,EAAEA;AAA9C,KAAD,CAAX;AAED,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACA,MAAA,WAAW,EAAEA,WADb;AAEA,MAAA,YAAY,EAAEG,YAFd;AAGA,MAAA,SAAS,EAAED,SAHX;AAIA,MAAA,QAAQ,EAAEL,QAJV;AAKA,MAAA,WAAW,EAAEQ,WALb;AAMA,MAAA,QAAQ,EAAED;AANV;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,OAAD;AACA,MAAA,KAAK,EAAEN,KADP;AAEA,MAAA,cAAc,EAAEG;AAFhB;AAAA;AAAA;AAAA;AAAA,YAXF,eAiBE;AACA,MAAA,YAAY,EAAEO,iBADd;AAEA,MAAA,gBAAgB,EAAEA,iBAFlB;AAGA,MAAA,GAAG,EAAEX,QAHL;AAIA,MAAA,GAAG,EAAEG,WAAW,CAACY;AAJjB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA5CQhB,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useRef} from 'react';\n//import styles\nimport './styles/app.scss'\n//Adding components\nimport Player from './components/Player';\nimport Song from './components/Song';\n//import util\nimport data from \"./util\"\nimport Library from './components/Library';\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);//this is how you grab elements in React\n  //State \n  const [songs, setSongs]=useState(data());//sets the array of data to songs\n  const [currentSong, setCurrentSong] = useState(songs[0]);//grabs the first song of the array of objects\n  const [isPlaying, setIsPlaying] = useState(false); //if a song is playing\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  })\n  const timeUpdateHandler = (e) =>{\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration: duration});\n\n  };\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong}/>\n      <Player \n      currentSong={currentSong} \n      setIsPlaying={setIsPlaying} \n      isPlaying={isPlaying}\n      audioRef={audioRef}\n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n\n      />\n      <Library \n      songs={songs} \n      setCurrentSong={setCurrentSong} \n  \n\n      />\n      <audio \n      onTimeUpdate={timeUpdateHandler} \n      onLoadedMetadata={timeUpdateHandler} \n      ref={audioRef} \n      src={currentSong.audio}\n      >\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}