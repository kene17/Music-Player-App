{"ast":null,"code":"var _jsxFileName = \"/Users/kene17/Desktop/01-starting-project 6/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = props => {\n  const songSelectHandler = () => {\n    const selectedSong = props.songs.filter(state => state.id === props.id); //filter returns us an array\n\n    props.setCurrentSong(selectedSong[0]); //check if song is playing\n\n    if (props.isPlaying === false) {\n      const playPromise = props.audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-song\",\n    onClick: songSelectHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: props.song.name,\n      src: props.song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", props.song.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", props.song.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/kene17/Desktop/01-starting-project 6/src/components/LibrarySong.js"],"names":["React","LibrarySong","props","songSelectHandler","selectedSong","songs","filter","state","id","setCurrentSong","isPlaying","playPromise","audioRef","current","play","undefined","then","audio","song","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,iBAAiB,GAAG,MAAK;AAC3B,UAAMC,YAAY,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAoBC,KAAD,IAASA,KAAK,CAACC,EAAN,KAAWN,KAAK,CAACM,EAA7C,CAArB,CAD2B,CAC2C;;AACtEN,IAAAA,KAAK,CAACO,cAAN,CAAqBL,YAAY,CAAC,CAAD,CAAjC,EAF2B,CAI3B;;AACA,QAAGF,KAAK,CAACQ,SAAN,KAAkB,KAArB,EAA2B;AACvB,YAAMC,WAAW,GAACT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,EAAlB;;AACA,UAAGH,WAAW,KAAKI,SAAnB,EAA6B;AACzBJ,QAAAA,WAAW,CAACK,IAAZ,CAAkBC,KAAD,IAAS;AACtBL,UAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAjB;AACH,SAFD;AAGH;AAEJ;AACJ,GAdD;;AAeF,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAEX,iBAAvC;AAAA,4BACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACgB,IAAN,CAAWC,IAArB;AAA2B,MAAA,GAAG,EAAEjB,KAAK,CAACgB,IAAN,CAAWE;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,wBAAMlB,KAAK,CAACgB,IAAN,CAAWC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wBAAMjB,KAAK,CAACgB,IAAN,CAAWG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;KAAMpB,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = (props) => {\n    const songSelectHandler = () =>{\n        const selectedSong = props.songs.filter((state)=>state.id===props.id);//filter returns us an array\n        props.setCurrentSong(selectedSong[0]);\n        \n        //check if song is playing\n        if(props.isPlaying===false){\n            const playPromise=props.audioRef.current.play();\n            if(playPromise !== undefined){\n                playPromise.then((audio)=>{\n                    audioRef.current.play()\n                })\n            }\n\n        }\n    };\n  return (\n    <div className=\"library-song\" onClick={songSelectHandler}>\n      <img alt={props.song.name} src={props.song.cover}></img>\n      <div className=\"song-description\">\n        <h3> {props.song.name}</h3>\n        <h4> {props.song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n "]},"metadata":{},"sourceType":"module"}