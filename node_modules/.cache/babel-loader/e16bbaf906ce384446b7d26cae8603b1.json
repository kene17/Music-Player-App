{"ast":null,"code":"var _jsxFileName = \"/Users/kene17/Desktop/01-starting-project 6/src/components/Player.js\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = props => {\n  //Ref\n  //event Handlers\n  const playSongHandler = () => {\n    // `current` points to the mounted text input element\n    if (props.isPlaying === true) {\n      props.audioRef.current.pause();\n      props.setIsPlaying(false);\n    } else {\n      props.audioRef.current.play();\n      props.setIsPlaying(true);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    props.audioRef.current.currentTime = e.target.value;\n    props.setSongInfo({ ...props.songInfo,\n      currentTime: e.target.value\n    });\n  }; //State \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(props.songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: props.songInfo.duration,\n        value: props.songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(props.songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: props.isPlaying === false ? faPlay : faPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/kene17/Desktop/01-starting-project 6/src/components/Player.js"],"names":["React","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","props","playSongHandler","isPlaying","audioRef","current","pause","setIsPlaying","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","setSongInfo","songInfo","duration"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = (props) => {\n  //Ref\n  \n  //event Handlers\n  const playSongHandler = () =>{\n    // `current` points to the mounted text input element\n    if(props.isPlaying===true){\n      props.audioRef.current.pause();\n      props.setIsPlaying(false);\n    }else{\n      props.audioRef.current.play();\n      props.setIsPlaying(true);\n    }\n  };\n  \n  const getTime = (time) =>{\n    return(\n      Math.floor(time/ 60) + \":\" + (\"0\" + Math.floor(time % 60 )).slice(-2)\n    )\n\n  }\n  const dragHandler =(e)=>{\n    props.audioRef.current.currentTime = e.target.value;\n    props.setSongInfo({...props.songInfo, currentTime: e.target.value})\n\n  };\n  //State \n  \n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(props.songInfo.currentTime)}</p>\n        <input min={0} max={props.songInfo.duration} value={props.songInfo.currentTime} onChange={dragHandler} type=\"range\" />\n        <p>{getTime(props.songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={ faAngleLeft} />\n        <FontAwesomeIcon onClick = {playSongHandler} className=\"play\" size=\"2x\" icon={props.isPlaying===false ?  faPlay: faPause} />\n\n        <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n      </div>\n      \n    </div>\n  );\n};\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}